{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AdminService = /*#__PURE__*/(() => {\n  class AdminService {\n    constructor(http) {\n      this.http = http;\n      this.facultyUrl = \"http://localhost:3000/admin/faculty\";\n      this.studentUrl = \"http://localhost:3000/admin/student\";\n      this.trainingUrl = \"http://localhost:3000/admin/training\";\n    }\n\n    getAllFaculty() {\n      return this.http.get(this.facultyUrl);\n    }\n\n    getFacultyById(id) {\n      return this.http.get(this.facultyUrl + '/' + id);\n    }\n\n    addFaculty(facultyObj) {\n      return this.http.post(this.facultyUrl, facultyObj);\n    }\n\n    deleteFaculty(id) {\n      return this.http.delete(this.facultyUrl + '/' + id);\n    }\n\n    updateFaculty(facultyObj) {\n      return this.http.put(this.facultyUrl + '/' + facultyObj._id, facultyObj);\n    }\n\n    getAllStudents() {\n      return this.http.get(this.studentUrl);\n    }\n\n    getStudentById(id) {\n      return this.http.get(this.studentUrl + '/' + id);\n    }\n\n    addStudent(studentObj) {\n      return this.http.post(this.studentUrl, studentObj);\n    }\n\n    deleteStudnet(id) {\n      return this.http.delete(this.studentUrl + '/' + id);\n    }\n\n    updateStudent(studentObj) {\n      return this.http.put(this.studentUrl + '/' + studentObj._id, studentObj);\n    }\n\n    createTraining(trainingObj, certificate) {\n      var formData = new FormData();\n      formData.append('data', JSON.stringify(trainingObj));\n      formData.append('image', certificate);\n      return this.http.post(this.trainingUrl, formData, {\n        reportProgress: true,\n        observe: 'events'\n      });\n    }\n\n    getAllTrainings() {\n      return this.http.get(this.trainingUrl);\n    }\n\n    getAllTrainingsById(id) {\n      return this.http.get(this.trainingUrl + '/' + id);\n    }\n\n    deleteTraining(id) {\n      return this.http.delete(this.trainingUrl + '/' + id);\n    }\n\n  }\n\n  AdminService.ɵfac = function AdminService_Factory(t) {\n    return new (t || AdminService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AdminService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AdminService,\n    factory: AdminService.ɵfac,\n    providedIn: 'root'\n  });\n  return AdminService;\n})();","map":null,"metadata":{},"sourceType":"module"}